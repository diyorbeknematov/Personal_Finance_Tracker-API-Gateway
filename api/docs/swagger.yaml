basePath: /api/v1
definitions:
  budgeting.Account:
    properties:
      balance:
        type: number
      currency:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  budgeting.Budget:
    properties:
      amount:
        type: number
      category_id:
        type: string
      end_date:
        type: string
      id:
        type: string
      period:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  budgeting.BudgetPerformance:
    properties:
      actual:
        type: number
      category_id:
        type: string
      progress:
        type: number
      target:
        type: number
    type: object
  budgeting.Category:
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  budgeting.CreateAccountReq:
    properties:
      balance:
        type: number
      currency:
        type: string
      name:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  budgeting.CreateAccountResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.CreateBudgetReq:
    properties:
      amount:
        type: number
      category_id:
        type: string
      end_date:
        type: string
      period:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  budgeting.CreateBudgetResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.CreateCategoryReq:
    properties:
      name:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  budgeting.CreateCategoryResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.CreateGoalReq:
    properties:
      current_amount:
        type: number
      deadline:
        type: string
      name:
        type: string
      status:
        type: string
      target_amount:
        type: number
      user_id:
        type: string
    type: object
  budgeting.CreateGoalResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.CreateTransactionReq:
    properties:
      account_id:
        type: string
      amount:
        type: number
      category_id:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  budgeting.DeleteAccountResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.DeleteBudgetResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.DeleteCategoryResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.DeleteGoalResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.DeleteNotificationResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.DeleteTransactionResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.GetAccountResp:
    properties:
      balance:
        type: number
      currency:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  budgeting.GetAccountsListResp:
    properties:
      accounts:
        items:
          $ref: '#/definitions/budgeting.Account'
        type: array
      limit:
        type: integer
      offset:
        type: integer
      total_count:
        type: integer
    type: object
  budgeting.GetBudgetPerformanceResp:
    properties:
      budget_performance_list:
        items:
          $ref: '#/definitions/budgeting.BudgetPerformance'
        type: array
      month:
        type: integer
      user_id:
        type: string
      year:
        type: integer
    type: object
  budgeting.GetBudgetResp:
    properties:
      amount:
        type: number
      category_id:
        type: string
      end_date:
        type: string
      id:
        type: string
      period:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  budgeting.GetBudgetsResp:
    properties:
      budgets:
        items:
          $ref: '#/definitions/budgeting.Budget'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total_count:
        type: integer
    type: object
  budgeting.GetCategoriesResp:
    properties:
      categories:
        items:
          $ref: '#/definitions/budgeting.Category'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total_count:
        type: integer
    type: object
  budgeting.GetCategoryResp:
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  budgeting.GetGoalProgressResp:
    properties:
      goal_progress:
        items:
          $ref: '#/definitions/budgeting.GoalProgress'
        type: array
    type: object
  budgeting.GetGoalResp:
    properties:
      current_amount:
        type: number
      deadline:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: string
      target_amount:
        type: number
      user_id:
        type: string
    type: object
  budgeting.GetGoalsResp:
    properties:
      goals:
        items:
          $ref: '#/definitions/budgeting.Goal'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total_count:
        type: integer
    type: object
  budgeting.GetIncomeReportResp:
    properties:
      monthly:
        type: boolean
      user_id:
        type: string
      yearly:
        type: boolean
    type: object
  budgeting.GetNotificationResp:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_read:
        type: boolean
      message:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  budgeting.GetNotificationsListResp:
    properties:
      notification_list:
        items:
          $ref: '#/definitions/budgeting.Notification'
        type: array
    type: object
  budgeting.GetSependingResp:
    properties:
      monthly:
        type: boolean
      total_amount:
        type: number
      yearly:
        type: boolean
    type: object
  budgeting.GetTransactionResp:
    properties:
      account_id:
        type: string
      amount:
        type: number
      category_id:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  budgeting.GetTransactionsListResp:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total_count:
        type: integer
      transactions:
        items:
          $ref: '#/definitions/budgeting.Transaction'
        type: array
    type: object
  budgeting.Goal:
    properties:
      current_amount:
        type: number
      deadline:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: string
      target_amount:
        type: number
      user_id:
        type: string
    type: object
  budgeting.GoalProgress:
    properties:
      current_amount:
        type: number
      id:
        type: string
      name:
        type: string
      progress:
        type: number
      target_amount:
        type: number
    type: object
  budgeting.Notification:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_read:
        type: boolean
      message:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  budgeting.SendNotificationReq:
    properties:
      message:
        type: string
      status:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  budgeting.Transaction:
    properties:
      account_id:
        type: string
      amount:
        type: number
      category_id:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  budgeting.UpdateAccountReq:
    properties:
      balance:
        type: number
      currency:
        type: string
      id:
        type: string
      name:
        type: string
      type:
        type: string
      user_id:
        type: string
    type: object
  budgeting.UpdateAccountResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.UpdateBudgetReq:
    properties:
      amount:
        type: number
      category_id:
        type: string
      end_date:
        type: string
      id:
        type: string
      period:
        type: string
      start_date:
        type: string
    type: object
  budgeting.UpdateCategoryReq:
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  budgeting.UpdateCategoryResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.UpdateGoalReq:
    properties:
      deadline:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: string
      target_amount:
        type: number
    type: object
  budgeting.UpdateGoalResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.UpdateNotificationReq:
    properties:
      id:
        type: string
      is_read:
        type: boolean
    type: object
  budgeting.UpdateNotificationResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  budgeting.UpdateTransactionReq:
    properties:
      amount:
        type: number
      date:
        type: string
      description:
        type: string
      id:
        type: string
      type:
        type: string
    type: object
  budgeting.UpdateTransactionResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  models.Response:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  user.ChangePasswordReq:
    properties:
      current_password:
        type: string
      id:
        type: string
      new_password:
        type: string
    type: object
  user.ChangePasswordResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  user.GetUsersListResp:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total_count:
        type: integer
      users:
        items:
          $ref: '#/definitions/user.UserProfile'
        type: array
    type: object
  user.UpdateUserProfileReq:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
    type: object
  user.UpdateUserProfileResp:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  user.UserProfile:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      role:
        type: string
    type: object
info:
  contact: {}
  description: Api Gateway service
  title: Api Gateway
  version: "1.0"
paths:
  /accounts:
    get:
      consumes:
      - application/json
      description: get accounts list
      parameters:
      - default: 1
        description: offset
        in: query
        name: Offset
        type: integer
      - default: 10
        description: limit
        in: query
        name: Limit
        type: integer
      - description: user id
        in: query
        name: UserId
        type: string
      - description: name
        in: query
        name: Name
        type: string
      - description: currency
        in: query
        name: Currency
        type: string
      - description: type
        in: query
        name: Type
        type: string
      - description: balance
        in: query
        name: Balance
        type: number
      - description: created at
        in: query
        name: CreatedAt
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetAccountsListResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: get accounts list
      tags:
      - account
    post:
      consumes:
      - application/json
      description: Create account
      parameters:
      - description: account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/budgeting.CreateAccountReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.CreateAccountResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create account
      tags:
      - account
  /accounts/{id}:
    delete:
      consumes:
      - application/json
      description: delete account
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.DeleteAccountResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: delete account
      tags:
      - account
    get:
      consumes:
      - application/json
      description: get account
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetAccountResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: get account
      tags:
      - account
    put:
      consumes:
      - application/json
      description: update account
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: string
      - description: account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/budgeting.UpdateAccountReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.UpdateAccountResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: update account
      tags:
      - account
  /budgets:
    get:
      consumes:
      - application/json
      description: list budgets
      parameters:
      - default: 1
        description: page
        in: query
        name: Page
        type: integer
      - default: 10
        description: limit
        in: query
        name: Limit
        type: integer
      - description: user id
        in: query
        name: UserId
        type: string
      - description: category name
        in: query
        name: CategoryName
        type: string
      - description: period
        in: query
        name: Period
        type: string
      - description: amount
        in: query
        name: Amount
        type: number
      - description: start date
        in: query
        name: StartDate
        type: string
      - description: end date
        in: query
        name: EndDate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetBudgetsResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: list budgets
      tags:
      - budget
    post:
      consumes:
      - application/json
      description: Create budget
      parameters:
      - description: Budget
        in: body
        name: budget
        required: true
        schema:
          $ref: '#/definitions/budgeting.CreateBudgetReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.CreateBudgetResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create budget
      tags:
      - budget
  /budgets/{id}:
    delete:
      consumes:
      - application/json
      description: delete budget
      parameters:
      - description: budget id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.DeleteBudgetResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: delete budget
      tags:
      - budget
    get:
      consumes:
      - application/json
      description: get budget
      parameters:
      - description: budget id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetBudgetResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: get budget
      tags:
      - budget
    put:
      consumes:
      - application/json
      description: update budget
      parameters:
      - description: budget id
        in: path
        name: id
        required: true
        type: string
      - description: budget
        in: body
        name: budget
        required: true
        schema:
          $ref: '#/definitions/budgeting.UpdateBudgetReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: update budget
      tags:
      - budget
  /categories:
    get:
      consumes:
      - application/json
      description: Gets all categories
      parameters:
      - default: 10
        description: Limit
        in: query
        name: Limit
        type: integer
      - default: 1
        description: Offset
        in: query
        name: Page
        type: integer
      - description: User ID
        in: query
        name: UserId
        type: string
      - description: Name
        in: query
        name: Name
        type: string
      - description: Type
        in: query
        name: Type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetCategoriesResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all categories
      tags:
      - category
    post:
      consumes:
      - application/json
      description: Creates a new category
      parameters:
      - description: New category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/budgeting.CreateCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.CreateCategoryResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new category
      tags:
      - category
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.DeleteCategoryResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a category
      tags:
      - category
    get:
      consumes:
      - application/json
      description: Gets a category by id
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetCategoryResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a category by id
      tags:
      - category
    put:
      consumes:
      - application/json
      description: Updates a category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/budgeting.UpdateCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.UpdateCategoryResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a category
      tags:
      - category
  /goals:
    get:
      consumes:
      - application/json
      description: Gets all goals
      parameters:
      - default: 1
        description: Offset
        in: query
        name: Page
        type: integer
      - default: 10
        description: Limit
        in: query
        name: Limit
        type: integer
      - description: Filter by user id
        in: query
        name: UserId
        type: string
      - description: Filter by name
        in: query
        name: Name
        type: string
      - description: Filter by target amount
        in: query
        name: TargetAmount
        type: number
      - description: Filter by status
        in: query
        name: Status
        type: string
      - description: Filter by deadline
        in: query
        name: Deadline
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetGoalsResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all goals
      tags:
      - goal
    post:
      consumes:
      - application/json
      description: Creates a new goal
      parameters:
      - description: New goal
        in: body
        name: goal
        required: true
        schema:
          $ref: '#/definitions/budgeting.CreateGoalReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.CreateGoalResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new goal
      tags:
      - goal
  /goals/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a goal
      parameters:
      - description: Goal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.DeleteGoalResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a goal
      tags:
      - goal
    get:
      consumes:
      - application/json
      description: Gets a goal by id
      parameters:
      - description: Goal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetGoalResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a goal by id
      tags:
      - goal
    put:
      consumes:
      - application/json
      description: Updates a goal
      parameters:
      - description: Goal ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated goal
        in: body
        name: goal
        required: true
        schema:
          $ref: '#/definitions/budgeting.UpdateGoalReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.UpdateGoalResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a goal
      tags:
      - goal
  /notification/{id}:
    delete:
      consumes:
      - application/json
      description: Delete notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.DeleteNotificationResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete notification
      tags:
      - notification
    get:
      consumes:
      - application/json
      description: Get notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetNotificationResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get notification
      tags:
      - notification
    put:
      consumes:
      - application/json
      description: Update notification
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated notification
        in: body
        name: notification
        required: true
        schema:
          $ref: '#/definitions/budgeting.UpdateNotificationReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.UpdateNotificationResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update notification
      tags:
      - notification
  /notification/list:
    get:
      consumes:
      - application/json
      description: Get notification list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetNotificationsListResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get notification list
      tags:
      - notification
  /notification/send:
    post:
      consumes:
      - application/json
      description: Send notification to a user
      parameters:
      - description: Send notification request
        in: body
        name: sendNotificationReq
        required: true
        schema:
          $ref: '#/definitions/budgeting.SendNotificationReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Send notification to a user
      tags:
      - notification
  /reporting/budget-performance:
    get:
      description: This endpoint will return the income report
      parameters:
      - default: 2024
        description: Year report
        in: query
        name: Year
        type: integer
      - default: 1
        description: Monthly report
        in: query
        name: Month
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetBudgetPerformanceResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - reporting
  /reporting/goal-progress:
    get:
      description: This endpoint will return the goal progress report
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetGoalProgressResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - reporting
  /reporting/income:
    get:
      description: This endpoint will return the income report
      parameters:
      - description: Yearly report
        in: query
        name: Yearly
        type: boolean
      - description: Monthly report
        in: query
        name: Monthly
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetIncomeReportResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - reporting
  /reporting/sepending:
    get:
      description: This endpoint will return the sepending report
      parameters:
      - description: Yearly report
        in: query
        name: Yearly
        type: boolean
      - description: Monthly report
        in: query
        name: Monthly
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetSependingResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - reporting
  /transactions:
    get:
      consumes:
      - application/json
      description: get transactions list
      parameters:
      - default: 10
        description: limit
        in: query
        name: Limit
        type: integer
      - default: 1
        description: offset
        in: query
        name: Page
        type: integer
      - description: Account name
        in: query
        name: AccountName
        type: string
      - description: Amount
        in: query
        name: Amount
        type: number
      - description: Category name
        in: query
        name: CategoryName
        type: string
      - description: Type
        in: query
        name: Type
        type: string
      - description: Description
        in: query
        name: Description
        type: string
      - description: Date from
        in: query
        name: DateFrom
        type: string
      - description: Date to
        in: query
        name: DateTo
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetTransactionsListResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: get transactions list
      tags:
      - transaction
    post:
      consumes:
      - application/json
      description: Create transaction
      parameters:
      - description: transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/budgeting.CreateTransactionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create transaction
      tags:
      - transaction
  /transactions/{id}:
    delete:
      consumes:
      - application/json
      description: delete transaction
      parameters:
      - description: transaction id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.DeleteTransactionResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: delete transaction
      tags:
      - transaction
    get:
      consumes:
      - application/json
      description: get transaction
      parameters:
      - description: transaction id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.GetTransactionResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: get transaction
      tags:
      - transaction
    put:
      consumes:
      - application/json
      description: update transaction
      parameters:
      - description: transaction id
        in: path
        name: id
        required: true
        type: string
      - description: transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/budgeting.UpdateTransactionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/budgeting.UpdateTransactionResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: update transaction
      tags:
      - transaction
  /users:
    get:
      consumes:
      - application/json
      description: This API is used to get users list
      parameters:
      - default: 10
        description: Limit
        in: query
        name: Limit
        type: integer
      - default: 1
        description: Page
        in: query
        name: Page
        type: integer
      - description: FirstName
        in: query
        name: FirstName
        type: string
      - description: LastName
        in: query
        name: LastName
        type: string
      - description: Email
        in: query
        name: Email
        type: string
      - description: Role
        in: query
        name: Role
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetUsersListResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get Users List
      tags:
      - user
  /users/password:
    put:
      consumes:
      - application/json
      description: This API is used to change password
      parameters:
      - description: Change Password
        in: body
        name: changePassword
        required: true
        schema:
          $ref: '#/definitions/user.ChangePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ChangePasswordResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Change Password
      tags:
      - user
  /users/profile:
    get:
      consumes:
      - application/json
      description: This API is used to get user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get User Profile
      tags:
      - user
    put:
      consumes:
      - application/json
      description: This API is used to update user profile
      parameters:
      - description: User Profile
        in: body
        name: userProfile
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserProfileReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UpdateUserProfileResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update User Profile
      tags:
      - user
schemes:
- http
swagger: "2.0"
